{"version":3,"file":"static/js/261.c3aa496d.chunk.js","mappings":"8LAoFA,UAxEqB,WACnB,IAAMA,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IACvBC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHX,GAELS,GAASG,EAAAA,EAAAA,MACX,GAAG,CAACZ,EAAiBS,IAEvB,IAmBQI,EAAeC,MAAMC,QAAQZ,IAAaA,EAASa,OAAS,EAClE,OACEC,EAAAA,EAAAA,MAAA,WAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAjBW,SAAAC,GAEnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAETC,EAAOF,EAAKG,SAASC,YAAYC,MACjCC,EAASN,EAAKG,SAASI,cAAcF,MAE3C,GAAIxB,EAAS2B,MAAK,SAAAC,GAAO,OAAIA,EAAQP,OAASA,CAAI,IAChD,OAAOQ,MAAM,qBAADC,OAAsBT,EAAI,qBAExCf,GAASyB,EAAAA,EAAAA,IAAgB,CAACV,KAAAA,EAAKI,OAAAA,IACjC,EAKiCV,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEiB,EAAAA,EAAAA,KAAA,KAAAjB,SAAG,WACHiB,EAAAA,EAAAA,KAAA,SAAOX,KAAK,cAAcY,KAAK,OAAOC,UAAQ,QAEhDF,EAAAA,EAAAA,KAAA,UACAlB,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEiB,EAAAA,EAAAA,KAAA,KAAAjB,SAAG,aACHiB,EAAAA,EAAAA,KAAA,SAAOX,KAAK,gBAAgBY,KAAK,OAAOC,UAAQ,QAElDF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQG,SAAS,SAAQpB,SAAC,mBAG3Bb,IAAa8B,EAAAA,EAAAA,KAAA,MAAAjB,SAAI,eACjBX,IAASU,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,+BAA6BX,MAC1C4B,EAAAA,EAAAA,KAAA,MAAAjB,SACGL,GACCV,EAASoC,KAAI,SAAAR,GACX,OACEd,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,SAAOa,EAAQP,SACnBP,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,WAASa,EAAQH,WACpBO,EAAAA,EAAAA,KAAA,UACEK,QAAS,kBA9CCC,EA8CyBV,EAAQW,QA7C3DjC,GAASkC,EAAAA,EAAAA,IAAmBF,IADF,IAAAA,CA8CoC,EAC9CL,KAAK,SACL,aAAW,iBAAgBlB,SAC5B,WAPMa,EAAQW,GAYrB,QAIV,C","sources":["pages/contacts/contacts.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthentificated } from 'redux/authReducer';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  requestContactsThunk,\n  selectContactsError,\n  selectContactsIsLoading,\n  selectUserContacts,\n} from 'redux/contactsReducer';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\nconst handleDeleteContact = contactId => {\n  dispatch(deleteContactThunk(contactId));\n};\n\n\n  const handleSubmit = e => {\n    \n    e.preventDefault();\n    const form = e.currentTarget;\n\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n    \n    dispatch(addContactThunk({name,number}))\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <input name=\"contactName\" type=\"text\" required />\n        </label>\n        <br />\n        <label>\n          <p>Number:</p>\n          <input name=\"contactNumber\" type=\"text\" required />\n        </label>\n        <br />\n        <button htmlType=\"submit\">Add contact</button>\n      </form>\n\n      {isLoading && <h2>Loading...</h2>}\n      {error && <p>Oops, some error occured... {error}</p>}\n      <ul>\n        {showContacts &&\n          contacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>Name: {contact.name}</h3>\n                <p>Number: {contact.number}</p>\n                <button\n                  onClick={() => handleDeleteContact(contact.id)}\n                  type=\"button\"\n                  aria-label=\"Delete contact\"\n                >\n                  &times;\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </section>\n  );\n};\nexport default ContactsPage;\n"],"names":["authentificated","useSelector","selectAuthentificated","contacts","selectUserContacts","isLoading","selectContactsIsLoading","error","selectContactsError","dispatch","useDispatch","useEffect","requestContactsThunk","showContacts","Array","isArray","length","_jsxs","children","onSubmit","e","preventDefault","form","currentTarget","name","elements","contactName","value","number","contactNumber","some","contact","alert","concat","addContactThunk","_jsx","type","required","htmlType","map","onClick","contactId","id","deleteContactThunk"],"sourceRoot":""}
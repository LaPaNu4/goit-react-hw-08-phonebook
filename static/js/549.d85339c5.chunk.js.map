{"version":3,"file":"static/js/549.d85339c5.chunk.js","mappings":"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","sources":["redux/contact/selectorCont.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","redux/filter/selectFilt.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.s.js","components/Filter/Filter.jsx","pages/contacts/contacts.styled.js","pages/contacts/contacts.jsx"],"sourcesContent":["export const selectUserContacts = state => state.contacts.contacts;\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\n","import { styled } from 'styled-components';\n\n\nexport const FormBTN = styled.button`\n\n    background-color: #fff;\n    border: 1px solid #d5d9d9;\n    border-radius: 8px;\n    box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n    box-sizing: border-box;\n    color: #0f1111;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Amazon Ember', sans-serif;\n    font-size: 13px;\n    line-height: 29px;\n    padding: 0 10px 0 11px;\n    position: relative;\n    text-align: center;\n    text-decoration: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle;\n    width: 100px;\n    margin-top: 10px;\n  \n\n  &:hover {\n    background-color: #f7fafa;\n  }\n\n  &:focus {\n    border-color: #008296;\n    box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n    outline: 0;\n  }\n`;","import { toast } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contact/operationsCont';\nimport { selectUserContacts } from 'redux/contact/selectorCont';\nimport { FormBTN } from './ContactForm.styled';\n\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectUserContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return toast.error('This contact is already existing');\n\n    dispatch(addContactThunk({ name, number }));\n    form.reset()\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <p>Name:</p>\n        <input\n          name=\"contactName\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          type=\"text\"\n          required\n        />\n      </label>\n      <br />\n      <label>\n        <p>Number:</p>\n        <input\n          name=\"contactNumber\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          type=\"text\"\n          required\n        />\n      </label>\n      <br />\n      <FormBTN type=\"submit\">Add contact</FormBTN>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","export const selectFilters = state => state.filter.filter;\n","import { styled } from 'styled-components';\n\nexport const ULstyled = styled.ul`\n  margin-top: 10px;\n\n  .button-13 {\n    background-color: #fff;\n    border: 1px solid #d5d9d9;\n    border-radius: 8px;\n    box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n    box-sizing: border-box;\n    color: #0f1111;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Amazon Ember', sans-serif;\n    font-size: 13px;\n    line-height: 29px;\n    padding: 0 10px 0 11px;\n    position: relative;\n    text-align: center;\n    text-decoration: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle;\n    width: 100px;\n    margin-top: 10px;\n    margin-left: 10px;\n  }\n\n  .button-13:hover {\n    background-color: #f7fafa;\n  }\n\n  .button-13:focus {\n    border-color: #008296;\n    box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n    outline: 0;\n  }\n  .Item {\n    list-style-type: none;\n    display: flex;\n    align-items: baseline;\n    justify-content: flex-start;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contact/operationsCont';\nimport { selectUserContacts } from 'redux/contact/selectorCont';\nimport { selectFilters } from 'redux/filter/selectFilt';\nimport { ULstyled } from './ContactList.styled';\n\n\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectUserContacts);\n  const filter = useSelector(selectFilters);\n\n  const getFilteredContacts = () => {\n    if (!contacts) return [];\n    return contacts.filter(\n      contact =>\n        contact.name &&\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const filteredContacts = getFilteredContacts();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  return (\n    <ULstyled>\n      {filteredContacts.map(contact => (\n        <li className=\"Item\" key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            className=\"button-13\"\n            type=\"button\"\n            onClick={() => handleDeleteContact(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ULstyled>\n  );\n};\n\nexport default ContactList;\n","import { styled } from 'styled-components';\n\nexport const Div = styled.div`\nmargin-top: 10px;\n`","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  updateFilter } from 'redux/filter/filterSlice';\nimport { selectFilters } from 'redux/filter/selectFilt';\nimport { Div } from './Filter.s';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n  const handleFilterChange = event => {\n    dispatch(updateFilter(event.target.value));\n  };\n  return (\n    <Div>\n      <label>\n        Filter contacts by name:\n        <input type=\"text\" value={filter} onChange={handleFilterChange} />\n      </label>\n    </Div>\n  );\n};\n\nexport default Filter;\n","import { styled } from 'styled-components';\n\nexport const Section = styled.section`\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectAuthentificated } from 'redux/auth/selectors';\nimport { requestContactsThunk } from 'redux/contact/operationsCont';\nimport { selectContactsError, selectContactsIsLoading } from 'redux/contact/selectorCont';\nimport { Section } from './contacts.styled';\n\n\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  if (!authentificated) return <Navigate to=\"/login\" />;\n  return (\n    <Section>\n      <div>\n        <ContactForm />\n        <Filter />\n  \n        {isLoading && <h2>Loading...</h2>}\n        {error && <p>Oops, some error occured... {error}</p>}\n        <ContactList />\n      </div>\n    </Section>\n  );\n};\nexport default ContactsPage;\n"],"names":["selectUserContacts","state","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","FormBTN","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","useSelector","_jsxs","onSubmit","e","preventDefault","form","currentTarget","name","elements","contactName","value","number","contactNumber","some","contact","toast","addContactThunk","reset","children","_jsx","pattern","type","required","selectFilters","filter","ULstyled","filteredContacts","toLowerCase","includes","map","className","onClick","contactId","id","deleteContactThunk","Div","onChange","event","updateFilter","target","Section","authentificated","selectAuthentificated","useEffect","requestContactsThunk","ContactForm","Filter","ContactList","Navigate","to"],"sourceRoot":""}